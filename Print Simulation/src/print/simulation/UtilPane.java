package print.simulation;

import java.io.*;
import java.util.*;

/**
*  Class:	<b>UtilPane</b>
*  File:	UtilPane.java
* <pre>
*  Description:	This application allows printing of a file or a String to the
*               text pane. Most commonly used as about form for GUI based
*               applications.
*  @author	<i>Brent Young<i/>
*  Environment:	Mac OSx, jdk1.7_17, NetBeans 7.3
*  Date:	4/17/2013
*  @version	%1% %0%
*  @see         java.io.FileReader
*  @see         java.util.Scanner
* </pre>
*  History Log:	Created on April 1, 2013, 1:12:19 AM
*/

public class UtilPane extends javax.swing.JFrame {

    /**
     * Creates new form UtilPane, a read-only window that can be printed to, from either
     * String input or file input.
     * @see #printTextToPane(java.lang.String) 
     * @see #printFileToPane(java.lang.String) 
     */
    public UtilPane() {
        initComponents();
        this.getRootPane().setDefaultButton(closeJButton);
        setLocationRelativeTo(null);
//        this.setVisible(true);
//        this.setAlwaysOnTop(true);
        closeJButton.requestFocus();
    }
    
    /**
     * Basic method that allows a String to be displayed in the pane.
     * @param user String input
     * @see #printTextToPane(java.lang.String) 
     * @see #printFileToPane(java.lang.String) 
     */
    protected void setText(String user) {
        aboutJTextArea.setText(user);
    }
    
    /**
     * Prints the contents of a file to the pane in a line by line basis.
     * @param filename file to be read from, input file
     * @throws FileNotFoundException if file does not exist in the correct location
     * @see #printTextToPane(java.lang.String) 
     */
    public void printFileToPane(String filename) throws FileNotFoundException {
        File userFile = new File(filename);
        Scanner fileReader = new Scanner(userFile);
        String line = "";
        while (fileReader.hasNextLine()) {
            line += fileReader.nextLine() + "\n";
        }
        aboutJTextArea.setText(line);
    }
    
    /**
     * Prints a given String of text to the panel.
     * @param text String to be displayed
     * @see #printFileToPane(java.lang.String) 
     * @see ShippingHubGUI
     * @see #setText(java.lang.String) 
     */
    public void printTextToPane(String text) {
        Scanner textReader = new Scanner(text);
        String line = "";
        while (textReader.hasNextLine()) {
            line += textReader.nextLine() + "\n";
        }
        aboutJTextArea.setText(line);
    }

    @Override
    public String toString() {
        return "About pane.";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        aboutJTextArea = new javax.swing.JTextArea();
        closeJButton = new javax.swing.JButton();
        iconJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("About | Print Simulation");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Print Simulation");

        aboutJTextArea.setEditable(false);
        aboutJTextArea.setColumns(20);
        aboutJTextArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        aboutJTextArea.setRows(5);
        aboutJTextArea.setToolTipText("");
        aboutJTextArea.setFocusable(false);
        jScrollPane1.setViewportView(aboutJTextArea);

        closeJButton.setMnemonic('C');
        closeJButton.setText("Close");
        closeJButton.setToolTipText("Closes Window");
        closeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJButtonActionPerformed(evt);
            }
        });

        iconJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/printIcon.jpeg"))); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(173, 173, 173)
                .add(closeJButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(59, 59, 59)
                        .add(iconJLabel)
                        .add(38, 38, 38)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 209, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(iconJLabel))
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 347, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(closeJButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UtilPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UtilPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UtilPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UtilPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UtilPane().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea aboutJTextArea;
    private javax.swing.JButton closeJButton;
    private javax.swing.JLabel iconJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
